name: Flask App CI/CD Pipeline

# Trigger the workflow on pushes or pull requests to the 'master' branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Job 1: Run Tests on the Flask App
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests (Optional: You need to create test cases for this)
      - name: Run tests
        run: |
          # Add unit tests or code linting here
          python -m unittest discover -s tests

  # Job 2: Build and Push Docker Image to DockerHub
  build-and-push:
    runs-on: ubuntu-latest
    needs: test  # This ensures tests are run before the build

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Build Docker image
      - name: Build Docker image
        run: docker build -t iamrakeshanand/emotion-flask-app .

      # Log in to DockerHub using secrets for credentials
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push Docker image to DockerHub
      - name: Push Docker image
        run: docker push iamrakeshanand/emotion-flask-app
